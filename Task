Проект по теме "Объектно-ориентированное программирование с использованием двумерных массивов данных и циклических
алгоритмов обработки матриц"
Назовем матрицей таблицу, состоящую из m строк и n столбцов, заполненную значениями какого-либо типа.
Описание:
-m продавцов продают n видов товаров.
-Количество продаваемого товара представлено матрицей А, где в номер строки i (начинается с 0) показывает номер продавца
 (начинается с 1), а номер столбца j  (начинается с 0) показывает номер товара (начинается с 1), элемент матрицы A(i, j)
  показывает количество j товара, продаваемого i продавцом
-В матрице В, размером n строк и 2 столбца представлены цена каждого товара в первом столбце и комиссионные, полученные
 от продажи во втором
Задание:
1. Создать класс Sale, который в качестве полей имеет матрицы, необходимые для описания данных
2. Конструктор с параметрами размеров этих матриц, производящий инициализацию матриц
3. Методы, принимающие на вход двумерные массивы, которые должны будут скопированы в поля, тем самым произведя
заполнение матриц. Если размеры переданных двумерных массивов окажутся меньше размеров матриц в полях, то необходимо
 выбросить исключение InsufficientSizeMatrix
4. Метод, производящий перемножение таблицы А на таблицу B алгебраически. Смотреть опеределение алгебраического
умножения матриц.
По полученной матрице:
5. Метод, определяющий какой продавец выручил больше всего денег с продажи, какой - меньше
6. Метод, определяющий какой продавец получил наибольшие комиссионные, какой - меньшие
7. Метод, определяющий чему равна общая сумма денег, вырученных за проданные товары
8. Метод, определяющий сколько всего комиссионных получили продавцы
9. Метод, определяющий чему равна общая сумма денег, прошедших через руки продавцов
10. Метод toString, возвращающий строковое представление объекта Sale в формате:
	пример:
	Продавец 1 продает товар 1 в количестве 5 ед по стоимости 1.20 с комиссионными 0.50
	Продавец 1 продает товар 2 в количестве 2 ед по стоимости 2.80 с комиссионными 0.40
	.....
Дробные числа отформатировать с точностью 2 знака после запятой

11. Вывести номера продуктов которых нет ни у одного продавца
12. Вывести номера продуктов по самой низкой цене
13. Вывести продавцов которые продают больше всего товаров (по количеству )

Пример входных данных: в файле Task1.bmp

